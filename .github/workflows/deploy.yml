name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Build site
        run: |
          # Create _site directory for GitHub Pages
          mkdir -p ./_site
          
          # Copy all necessary files
          cp -r assets ./_site/
          cp -r css ./_site/
          cp -r js ./_site/
          cp index.html ./_site/
          
          # Copy optional files if they exist
          [ -f favicon.ico ] && cp favicon.ico ./_site/ || true
          [ -f robots.txt ] && cp robots.txt ./_site/ || true
          [ -f sitemap.xml ] && cp sitemap.xml ./_site/ || true
          [ -f CNAME ] && cp CNAME ./_site/ || true
          
          # List contents for debugging
          echo "Site contents:"
          ls -la ./_site/
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 